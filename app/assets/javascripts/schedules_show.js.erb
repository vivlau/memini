$(document).ready(function() {
  $('ul.tabs').tabs();
  // initialize input widgets first
  var schedule_id = $('#calendar').data('schedule')
  $('#datepairExample .time').timepicker({
      'showDuration': true,
      'timeFormat': 'g:ia'
  });
  $('#datepairExample .date').datepicker({
      'format': 'yyyy-m-d',
      'autoclose': true
  });
  $('.datepicker').pickadate({
    selectMonths: true, // Creates a dropdown to control month
    selectYears: 15 // Creates a dropdown of 15 years to control year
  });
  // initialize datepair
  $('#datepairExample').datepair();
  $('select').material_select();
  $('#calendar').fullCalendar({
    Boolean, default: true,
    customButtons: {
        createEvent: {
            text: 'Create Event',
            click: function() {
              $(this).wrap('<a href="#modal1"></a>');
              $('#modal1').modal({
                 show:true,
                 backdrop:'static'
              });
              $('#modal1').modal();
            }
        }
    },
    // Header
    header: {
      left: 'prev,next createEvent',
      center: 'title',
      right: 'today month,agendaWeek,agendaDay'
    },
    selectable: true,
    selectHelper: true,
    editable: true,
    numberCellHtml: function(row, col, date) {
      var classes;

      if (!this.dayNumbersVisible) { // if there are week numbers but not day numbers
          return '<td/>'; //  will create an empty space above events :(
      }

      classes = this.dayGrid.getDayClasses(date);
      classes.unshift('fc-day-number');

      return '' +
          '<td class="' + classes.join(' ') + '" data-date="' + date.format() + '"><a href ="http://www.google.com">' +
              date.date() +
          '</a></td>';
    },
    eventSources: [
			{
				url: schedule_id + '/events/index.json',
				editable: true,
        success: function(response) {
          console.log('this has worked');
        },
        error: function(response) {
          console.log('error');
        },
			}
    ],
    eventClick: function(event) {
      $(this).wrap('<a href="#event-modal"></a>');
      $("#modalHeader").html(event.title);
      $("#startTime").html(moment(event.start).format('MMMM Do YYYY, h:mm a'));
      $("#eventAddress").html(event.address);
      $("#eventPhone").html(event.phone);
      $("#eventRating").html(event.rating);
      $("#eventPrice").html(event.price);
      $('#event-modal img').attr('src', $(this).attr(event.images[0]));
      $("#eventImage").attr('src', event.images[0]);
      $("#eventLink").attr('href', event.url);
      $("#eventContent").dialog({ modal: true, title: event.title, width:350});
      $('#event-modal').modal({
         show:true,
         backdrop:'static'
      });
      $('#event-modal').modal();
    }
  });
  // $('.fc-highlight').addClass("modal-trigger");
  // $('.fc-highlight').attr('onclick', "location.href='#modal1'")
  // $('#fullCalModal').modal();
  $('#submitButton').on('click', function(e){
    // We don't want this to act as a link so cancel the link action
    e.preventDefault();

    doSubmit();
  });
  function doSubmit(){
   $("#modal1").modal('close');
   console.log($('#event_name').val());
   console.log($('#start_date').val());
   console.log($('#start_time').val());
   console.log($('#end_date').val());
   console.log($('#end_time').val());
   console.log($('#event_location').val());
   console.log($('#event_description').val());
   console.log($('#multCategories').val());
   // DATE TIME CONVERSION
   const startingDate = $('#start_date').val();
   const convertStartDate = moment(startingDate, "DD-MMM-YYYY").format('MM-DD-YYYY');
   const endingDate = $('#end_date').val();
   const convertEndDate = moment(endingDate, "DD-MMM-YYYY").format('MM-DD-YYYY');
   const startingTime = $('#start_time').val();
   const convertStartTime = moment(startingTime, "hh:mm a").format('HH:mm:ss');
   const endingTime = $('#end_time').val();
   const convertEndTime = moment(endingTime, "hh:mm a").format('HH:mm:ss');
   const startDateTime = convertStartDate + " " + convertStartTime;
   const endDateTime = convertEndDate + " " + convertEndTime;
   const makeStartDT = new Date(startDateTime);
   const makeEndDT = new Date(endDateTime);
   const startISO = makeStartDT.toISOString();
   console.log(startISO);
   const endISO = makeEndDT.toISOString();
   console.log(endISO);
   // EVENT DATA
   const eventData =
     {
         title: $('#event_name').val(),
         start: startISO,
         end: endISO,
         location: $('#event_location').val(),
         description: $('#event_description').val(),
         categories: $('#multCategories').val()
     };

   debugger
   // ALERT WHEN FORM SUBMITS
   alert("form submitted");
   // RENDER EVENT ONTO CALENDAR
   $("#calendar").fullCalendar('renderEvent', eventData, true);
   $('#calendar').fullCalendar('addEventSource', eventData);
   $('#calendar').fullCalendar('refetchEvents');
   // Resets form on submit
   $("form")[0].reset();
   return false;
 };
});
